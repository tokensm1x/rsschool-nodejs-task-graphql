{
	"info": {
		"_postman_id": "a23b6a32-1a43-4fb3-b47d-108eee6b18cd",
		"name": "GraphQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15410763"
	},
	"item": [
		{
			"name": "2.1 Get users, profiles, posts, memberTypes - 4 operations in one query.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n    users { \r\n        id, \r\n        firstName, \r\n        lastName, \r\n        email,\r\n    }, \r\n    posts { \r\n        id, \r\n        title, \r\n        content, \r\n        userId  \r\n        },  \r\n    profiles { \r\n        id, \r\n        avatar, \r\n        sex, \r\n        birthday, \r\n        country, \r\n        street, \r\n        city, \r\n        memberTypeId, \r\n        userId  \r\n    },   \r\n    memberTypes { \r\n        id, \r\n        discount,\r\n        monthPostsLimit  \r\n    } \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 Get user, profile, post, memberType by id - 4 operations in one query.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n    user (id: \"userId\")  {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n    },\r\n    post (id: \"postId\"){\r\n        id,\r\n        title,\r\n        content,\r\n        userId\r\n    },\r\n    profile (id: \"profileId\") {\r\n        id,\r\n        avatar,\r\n        sex,\r\n        birthday,\r\n        country,\r\n        street,\r\n        city,\r\n        memberTypeId,\r\n        userId,\r\n    }, \r\n    memberType (id: \"basic\") {\r\n        id,\r\n        discount,\r\n        monthPostsLimit\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3. Get users with their posts, profiles, memberTypes.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n    users { \r\n        id, \r\n        firstName, \r\n        lastName, \r\n        email,\r\n        posts {\r\n            id,\r\n            title,\r\n            content,\r\n            userId \r\n        },\r\n        profile {\r\n            id,\r\n            userId,\r\n            memberTypeId,\r\n            avatar,\r\n            sex,\r\n            birthday,\r\n            country,\r\n            street,\r\n            city, \r\n        },\r\n        memberType {\r\n            id,\r\n            discount,\r\n            monthPostsLimit\r\n        }\r\n    }, \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.4. Get user by id with his posts, profile, memberType.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n    user (id: \"userId\") { \r\n        id, \r\n        firstName, \r\n        lastName, \r\n        email,\r\n        posts {\r\n            id,\r\n            title,\r\n            content,\r\n            userId \r\n        },\r\n        profile {\r\n            id,\r\n            userId,\r\n            memberTypeId,\r\n            avatar,\r\n            sex,\r\n            birthday,\r\n            country,\r\n            street,\r\n            city, \r\n        },\r\n        memberType {\r\n            id,\r\n            discount,\r\n            monthPostsLimit\r\n        },\r\n    }, \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.5. Get users with their userSubscribedTo, profile.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n    users { \r\n        id,\r\n        firstName, \r\n        lastName, \r\n        profile {\r\n            id,\r\n            userId,\r\n            memberTypeId,\r\n            avatar,\r\n            sex,\r\n            birthday,\r\n            country,\r\n            street,\r\n            city, \r\n        },\r\n        userSubscribedTo {\r\n            id, \r\n            firstName, \r\n            lastName, \r\n            email,\r\n            profile {\r\n                id,\r\n                userId,\r\n                memberTypeId,\r\n                avatar,\r\n                sex,\r\n                birthday,\r\n                country,\r\n                street,\r\n                city, \r\n            },\r\n        },\r\n    }, \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.6. Get user by id with his subscribedToUser, posts.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n    user (id: \"userId\") { \r\n        posts {\r\n            id,\r\n            title,\r\n            content,\r\n            userId \r\n        },\r\n        subscribedToUser {\r\n            id, \r\n            firstName, \r\n            lastName, \r\n            email,\r\n            posts {\r\n                id,\r\n                title,\r\n                content,\r\n                userId \r\n            },\r\n        },\r\n    }, \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.7. Get users with their userSubscribedTo, subscribedToUser (additionally for each user in userSubscribedTo, subscribedToUser add their userSubscribedTo, subscribedToUser).",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {  \r\n    users { \r\n        id,\r\n        firstName, \r\n        lastName, \r\n        userSubscribedTo {\r\n            id, \r\n            firstName, \r\n            lastName, \r\n            email,\r\n            profile {\r\n                id,\r\n                userId,\r\n                memberTypeId,\r\n                avatar,\r\n                sex,\r\n                birthday,\r\n                country,\r\n                street,\r\n                city, \r\n            },\r\n            userSubscribedTo {\r\n                id, \r\n                firstName, \r\n                lastName, \r\n                email,\r\n                profile {\r\n                    id,\r\n                    userId,\r\n                    memberTypeId,\r\n                    avatar,\r\n                    sex,\r\n                    birthday,\r\n                    country,\r\n                    street,\r\n                    city, \r\n                },\r\n            },\r\n            subscribedToUser {\r\n                id, \r\n                firstName, \r\n                lastName, \r\n                email,\r\n                profile {\r\n                    id,\r\n                    userId,\r\n                    memberTypeId,\r\n                    avatar,\r\n                    sex,\r\n                    birthday,\r\n                    country,\r\n                    street,\r\n                    city, \r\n                },\r\n            },\r\n        },\r\n        subscribedToUser {\r\n            id, \r\n            firstName, \r\n            lastName, \r\n            email,\r\n            profile {\r\n                id,\r\n                userId,\r\n                memberTypeId,\r\n                avatar,\r\n                sex,\r\n                birthday,\r\n                country,\r\n                street,\r\n                city, \r\n            },\r\n            userSubscribedTo {\r\n                id, \r\n                firstName, \r\n                lastName, \r\n                email,\r\n                profile {\r\n                    id,\r\n                    userId,\r\n                    memberTypeId,\r\n                    avatar,\r\n                    sex,\r\n                    birthday,\r\n                    country,\r\n                    street,\r\n                    city, \r\n                },\r\n            },\r\n            subscribedToUser {\r\n                id, \r\n                firstName, \r\n                lastName, \r\n                email,\r\n                profile {\r\n                    id,\r\n                    userId,\r\n                    memberTypeId,\r\n                    avatar,\r\n                    sex,\r\n                    birthday,\r\n                    country,\r\n                    street,\r\n                    city, \r\n                },\r\n            },\r\n        },\r\n    }, \r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.8 Create user.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    createUser(\r\n        data: {\r\n            firstName: \"Ivan\",\r\n            lastName: \"Ivanov\",\r\n            email: \"fakeemail@email.com\"\r\n        }\r\n    ) {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        subscribedToUserIds\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.9 Create profile.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    createProfile(\r\n        data: {\r\n            userId: \"userId\",\r\n            memberTypeId: \"basic\",\r\n            avatar: \"image.png\",\r\n            sex: \"male\",\r\n            birthday: \"10.10.1990\",\r\n            country: \"Belarus\",\r\n            street: \"Lenina\",\r\n            city: \"Gomel\",\r\n        }\r\n    ) {\r\n        id,\r\n        userId,\r\n        memberTypeId,\r\n        avatar,\r\n        sex,\r\n        birthday,\r\n        country,\r\n        street,\r\n        city,\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.10 Create post.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    createPost(\r\n        data: {\r\n            userId: \"userId\",\r\n            content: \"content\",\r\n            title: \"title\"\r\n        }\r\n    ) {\r\n        id,\r\n        userId,\r\n        content,\r\n        title\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.12 Update user.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    updateUser(\r\n        id: \"userId\",\r\n        data: {\r\n            firstName: \"Petr\",\r\n            lastName: \"Petrov\",\r\n            email: \"petrov@email.com\"\r\n        }\r\n    ) {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.13  Update profile.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    updateProfile(\r\n        id: \"profileId\",\r\n        data: {\r\n            memberTypeId: \"business\",\r\n            avatar: \"image2.png\",\r\n            sex: \"male\",\r\n            birthday: \"10.10.1990\",\r\n            country: \"Belarus\",\r\n            street: \"main street\",\r\n            city: \"Minsk\",\r\n        }\r\n    ) {\r\n        id,\r\n        memberTypeId,\r\n        avatar,\r\n        sex,\r\n        birthday,\r\n        country,\r\n        street,\r\n        city,\r\n        userId\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.14 Update post.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    updatePost(\r\n        id: \"postId\", \r\n        data: {\r\n            content: \"updated content\",\r\n            title: \"updated title\"\r\n        }\r\n    ) {\r\n        id,\r\n        userId,\r\n        content,\r\n        title\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.15 Update memberType.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    updateType(\r\n        id: \"basic\", \r\n        data: {\r\n            discount: 2,\r\n            monthPostsLimit: 10\r\n        }\r\n    ) {\r\n        id,\r\n        discount,\r\n        monthPostsLimit\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.16. Subscribe to; unsubscribe from.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\r\n    subscribeToUser (\r\n        data: {\r\n            id: \"userId\", \r\n            userId: \"secondUserId\"\r\n        }\r\n    ) {\r\n        id,\r\n        firstName, \r\n        lastName, \r\n        email,\r\n        userSubscribedTo {\r\n            id, \r\n            firstName, \r\n            lastName, \r\n            email,\r\n            profile {\r\n                id,\r\n                userId,\r\n                memberTypeId,\r\n                avatar,\r\n                sex,\r\n                birthday,\r\n                country,\r\n                street,\r\n                city, \r\n            },\r\n        }\r\n    },\r\n    unsubscribeFromUser (\r\n      data: {\r\n          id: \"userId\", \r\n          userId: \"secondUserId\"\r\n      }\r\n    ) {\r\n        id,\r\n        firstName, \r\n        lastName, \r\n        email,\r\n        userSubscribedTo {\r\n            id, \r\n            firstName, \r\n            lastName, \r\n            email,\r\n            profile {\r\n                id,\r\n                userId,\r\n                memberTypeId,\r\n                avatar,\r\n                sex,\r\n                birthday,\r\n                country,\r\n                street,\r\n                city, \r\n            },\r\n        }\r\n    },\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}